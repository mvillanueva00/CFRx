# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rRy4QaWcWOoxL9qMqXH1fOTuCtqwkHNV
"""

import streamlit as st
import matplotlib.pyplot as plt
import pandas as pd
from io import BytesIO
from matplotlib.backends.backend_pdf import PdfPages

# Set up UI
st.title("Weekly Shipment Tracker (FedEx & DCS)")

# Date range input
st.subheader("Enter the date span for this shipment report")
date_span = st.text_input("Date range (e.g. 7/21/2025 - 7/25/2025)", value="7/21/2025 - 7/25/2025")

# Couriers and weekdays
days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"]
couriers = ["FedEx", "DCS"]

# User input for shipments
st.subheader("Enter number of shipments per courier per day")
shipment_data = {courier: [] for courier in couriers}

for day in days:
    st.markdown(f"**{day}**")
    cols = st.columns(len(couriers))
    for i, courier in enumerate(couriers):
        val = cols[i].number_input(f"{courier}", min_value=0, value=0, key=f"{courier}_{day}")
        shipment_data[courier].append(val)

# Convert to DataFrame
df = pd.DataFrame(shipment_data, index=days)

# Create the bar chart
fig, ax = plt.subplots(figsize=(10, 6))
df.plot(kind='bar', ax=ax)
ax.set_ylabel("Number of Shipments")
ax.set_title(f"Shipments by Courier ({date_span})")
ax.grid(axis='y')
plt.xticks(rotation=45)
plt.tight_layout()

# Display chart in app
st.pyplot(fig)

# Show total per courier
st.subheader("Total Shipments This Week")
totals = df.sum()
for courier in couriers:
    st.write(f"**{courier}:** {totals[courier]}")

# Save chart to PDF
pdf_buffer = BytesIO()
with PdfPages(pdf_buffer) as pdf:
    pdf.savefig(fig)
    pdf_buffer.seek(0)

# Download button
st.download_button(
    label="ðŸ“„ Download Chart as PDF",
    data=pdf_buffer,
    file_name="weekly_shipments.pdf",
    mime="application/pdf"
)
